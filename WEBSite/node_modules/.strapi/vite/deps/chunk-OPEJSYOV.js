// node_modules/@strapi/strapi/node_modules/@strapi/email/dist/_chunks/index-C3dnHLzx.mjs
var __variableDynamicImportRuntimeHelper = (glob, path) => {
  const v = glob[path];
  if (v) {
    return typeof v === "function" ? v() : Promise.resolve(v);
  }
  return new Promise((_, reject) => {
    (typeof queueMicrotask === "function" ? queueMicrotask : setTimeout)(reject.bind(null, new Error("Unknown variable dynamic import: " + path)));
  });
};
var PERMISSIONS = {
  // This permission regards the main component (App) and is used to tell
  // If the plugin link should be displayed in the menu
  // And also if the plugin is accessible. This use case is found when a user types the url of the
  // plugin directly in the browser
  settings: [{ action: "plugin::email.settings.read", subject: null }]
};
var prefixPluginTranslations = (trad, pluginId) => {
  return Object.keys(trad).reduce((acc, current) => {
    acc[`${pluginId}.${current}`] = trad[current];
    return acc;
  }, {});
};
var admin = {
  // TODO typing app in strapi/types as every plugin needs it
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  register(app) {
    app.createSettingSection(
      {
        id: "email",
        intlLabel: { id: "email.SettingsNav.section-label", defaultMessage: "Email Plugin" }
      },
      [
        {
          intlLabel: {
            id: "email.Settings.email.plugin.title",
            defaultMessage: "Settings"
          },
          id: "settings",
          to: "email",
          Component: () => import("./Settings-B67D6mio-6GHYS5ES.js").then((mod) => ({
            default: mod.ProtectedSettingsPage
          })),
          permissions: PERMISSIONS.settings
        }
      ]
    );
    app.registerPlugin({
      id: "email",
      name: "email"
    });
  },
  // eslint-disable-next-line @typescript-eslint/no-empty-function
  bootstrap() {
  },
  async registerTrads({ locales }) {
    const importedTrads = await Promise.all(
      locales.map((locale) => {
        return __variableDynamicImportRuntimeHelper(Object.assign({ "./translations/ar.json": () => import("./ar-Bf9XlLLo-JPILSGBF.js"), "./translations/cs.json": () => import("./cs-B0QZJTah-42MA3GYG.js"), "./translations/de.json": () => import("./de-B9kiAC-s-H72ESZJL.js"), "./translations/dk.json": () => import("./dk-DqrbgSkv-ZSO7YTK3.js"), "./translations/en.json": () => import("./en-DF4KtAAC-AUDVMAKQ.js"), "./translations/es.json": () => import("./es-BNo7eLLJ-DJPP3DLF.js"), "./translations/fr.json": () => import("./fr-hkSxFuzl-XXOBHAPS.js"), "./translations/id.json": () => import("./id-CHtAzAUz-RBQDH6OD.js"), "./translations/it.json": () => import("./it-C7z82V3g-XE7HXOYP.js"), "./translations/ja.json": () => import("./ja-CiekkoEN-SG7BVS5N.js"), "./translations/ko.json": () => import("./ko-CJBkZ375-E5GNFC4Y.js"), "./translations/ms.json": () => import("./ms-C1wNkEQw-AODWOKPU.js"), "./translations/nl.json": () => import("./nl-C79CwB4e-MQRL7L5Q.js"), "./translations/pl.json": () => import("./pl-DXcJCevg-MNWEY75Z.js"), "./translations/pt-BR.json": () => import("./pt-BR-DjINUWGk-4QGAVLYT.js"), "./translations/pt.json": () => import("./pt-DEVCt2mt-QXTCIM7S.js"), "./translations/ru.json": () => import("./ru-C_7wBr9e-ANCL3UB3.js"), "./translations/sk.json": () => import("./sk-i1gQKUBN-7PXHYKDU.js"), "./translations/th.json": () => import("./th-D-MxpWKr-ZPO3KZEE.js"), "./translations/tr.json": () => import("./tr-BXu41MLY-I7EOOS43.js"), "./translations/uk.json": () => import("./uk-C_1qrLRM-NQI6X4BV.js"), "./translations/vi.json": () => import("./vi-BfZkgFxI-XD36N2P5.js"), "./translations/zh-Hans.json": () => import("./zh-Hans-BLEEaLoN-VVZZ6IIJ.js"), "./translations/zh.json": () => import("./zh-BS-XJCSt-C2WYORXT.js") }), `./translations/${locale}.json`).then(({ default: data }) => {
          return {
            data: prefixPluginTranslations(data, "email"),
            locale
          };
        }).catch(() => {
          return {
            data: {},
            locale
          };
        });
      })
    );
    return Promise.resolve(importedTrads);
  }
};

export {
  PERMISSIONS,
  admin
};
//# sourceMappingURL=chunk-OPEJSYOV.js.map
