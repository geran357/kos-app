{"version":3,"file":"App-Bh6ZOYCv.mjs","sources":["../../admin/src/pages/App.tsx"],"sourcesContent":["/* eslint-disable import/no-default-export */\nimport * as React from 'react';\n\nimport {\n  LinkButton,\n  Flex,\n  IconButton,\n  Table,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n  Typography,\n  EmptyStateLayout,\n  Dialog,\n} from '@strapi/design-system';\nimport { Eye as Show, ArrowClockwise as Reload, Trash } from '@strapi/icons';\nimport {\n  ConfirmDialog,\n  useRBAC,\n  Page,\n  useAPIErrorHandler,\n  useNotification,\n  Layouts,\n} from '@strapi/strapi/admin';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { PERMISSIONS } from '../constants';\nimport {\n  useGetInfoQuery,\n  useRegenerateDocMutation,\n  useDeleteVersionMutation,\n} from '../services/api';\nimport { getTrad } from '../utils';\n\nconst App = () => {\n  const { formatMessage } = useIntl();\n  const { toggleNotification } = useNotification();\n  const { formatAPIError } = useAPIErrorHandler();\n  const { data, isLoading: isLoadingInfo, isError } = useGetInfoQuery();\n  const [regenerate] = useRegenerateDocMutation();\n  const [deleteVersion] = useDeleteVersionMutation();\n  const [showConfirmDelete, setShowConfirmDelete] = React.useState<boolean>(false);\n  const [versionToDelete, setVersionToDelete] = React.useState<string>();\n  const { allowedActions, isLoading: isLoadingRBAC } = useRBAC(PERMISSIONS);\n\n  const isLoading = isLoadingInfo || isLoadingRBAC;\n\n  const colCount = 4;\n  const rowCount = (data?.docVersions?.length || 0) + 1;\n\n  const handleRegenerateDoc = (version: string) => {\n    regenerate({ version })\n      .unwrap()\n      .then(() => {\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({\n            id: getTrad('notification.generate.success'),\n            defaultMessage: 'Successfully generated documentation',\n          }),\n        });\n      })\n      .catch((err) => {\n        toggleNotification({\n          type: 'warning',\n          message: formatAPIError(err),\n        });\n      });\n  };\n\n  const handleShowConfirmDelete = () => {\n    setShowConfirmDelete(!showConfirmDelete);\n  };\n\n  const handleConfirmDelete = async () => {\n    if (!versionToDelete) {\n      // nothing to delete\n      return;\n    }\n\n    await deleteVersion({ version: versionToDelete })\n      .unwrap()\n      .then(() => {\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({\n            id: getTrad('notification.delete.success'),\n            defaultMessage: 'Successfully deleted documentation',\n          }),\n        });\n      })\n      .catch((err) => {\n        toggleNotification({\n          type: 'warning',\n          message: formatAPIError(err),\n        });\n      });\n\n    setShowConfirmDelete(!showConfirmDelete);\n  };\n\n  const handleClickDelete = (version: string) => {\n    setVersionToDelete(version);\n    setShowConfirmDelete(!showConfirmDelete);\n  };\n\n  const title = formatMessage({\n    id: getTrad('plugin.name'),\n    defaultMessage: 'Documentation',\n  });\n\n  if (isLoading) {\n    return <Page.Loading />;\n  }\n\n  if (isError) {\n    return <Page.Error />;\n  }\n\n  return (\n    <Layouts.Root>\n      <Page.Title>{title}</Page.Title>\n      <Page.Main>\n        <Layouts.Header\n          title={title}\n          subtitle={formatMessage({\n            id: getTrad('pages.PluginPage.header.description'),\n            defaultMessage: 'Configure the documentation plugin',\n          })}\n          primaryAction={\n            <OpenDocLink\n              disabled={!allowedActions.canRead || !data?.currentVersion || !data?.prefix}\n              href={createDocumentationHref(`${data?.prefix}/v${data?.currentVersion}`)}\n              startIcon={<Show />}\n            >\n              {formatMessage({\n                id: getTrad('pages.PluginPage.Button.open'),\n                defaultMessage: 'Open Documentation',\n              })}\n            </OpenDocLink>\n          }\n        />\n        <Layouts.Content>\n          {data?.docVersions.length ? (\n            <Table colCount={colCount} rowCount={rowCount}>\n              <Thead>\n                <Tr>\n                  <Th>\n                    <Typography variant=\"sigma\" textColor=\"neutral600\">\n                      {formatMessage({\n                        id: getTrad('pages.PluginPage.table.version'),\n                        defaultMessage: 'Version',\n                      })}\n                    </Typography>\n                  </Th>\n                  <Th>\n                    <Typography variant=\"sigma\" textColor=\"neutral600\">\n                      {formatMessage({\n                        id: getTrad('pages.PluginPage.table.generated'),\n                        defaultMessage: 'Last Generated',\n                      })}\n                    </Typography>\n                  </Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {data.docVersions\n                  .slice(0)\n                  .sort((a, b) => (a.generatedDate < b.generatedDate ? 1 : -1))\n                  .map((doc) => (\n                    <Tr key={doc.version}>\n                      <Td width=\"50%\">\n                        <Typography>{doc.version}</Typography>\n                      </Td>\n                      <Td width=\"50%\">\n                        <Typography>{doc.generatedDate}</Typography>\n                      </Td>\n                      <Td>\n                        <Flex justifyContent=\"end\" onClick={(e) => e.stopPropagation()}>\n                          <IconButton\n                            tag=\"a\"\n                            disabled={!allowedActions.canRead}\n                            href={createDocumentationHref(`${data.prefix}/v${doc.version}`)}\n                            variant=\"ghost\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            label={formatMessage(\n                              {\n                                id: getTrad('pages.PluginPage.table.icon.show'),\n                                defaultMessage: 'Open {target}',\n                              },\n                              { target: `${doc.version}` }\n                            )}\n                          >\n                            <Show />\n                          </IconButton>\n                          {allowedActions.canRegenerate ? (\n                            <IconButton\n                              onClick={() => handleRegenerateDoc(doc.version)}\n                              variant=\"ghost\"\n                              label={formatMessage(\n                                {\n                                  id: getTrad('pages.PluginPage.table.icon.regenerate'),\n                                  defaultMessage: 'Regenerate {target}',\n                                },\n                                { target: `${doc.version}` }\n                              )}\n                            >\n                              <Reload />\n                            </IconButton>\n                          ) : null}\n                          {allowedActions.canUpdate && doc.version !== data.currentVersion ? (\n                            <IconButton\n                              onClick={() => handleClickDelete(doc.version)}\n                              variant=\"ghost\"\n                              label={formatMessage(\n                                {\n                                  id: 'global.delete-target',\n                                  defaultMessage: 'Delete {target}',\n                                },\n                                { target: `${doc.version}` }\n                              )}\n                            >\n                              <Trash />\n                            </IconButton>\n                          ) : null}\n                        </Flex>\n                      </Td>\n                    </Tr>\n                  ))}\n              </Tbody>\n            </Table>\n          ) : (\n            <EmptyStateLayout content=\"\" icon={null} />\n          )}\n        </Layouts.Content>\n        <Dialog.Root open={showConfirmDelete} onOpenChange={setShowConfirmDelete}>\n          <ConfirmDialog onConfirm={handleConfirmDelete} />\n        </Dialog.Root>\n      </Page.Main>\n    </Layouts.Root>\n  );\n};\n\n/**\n * TODO: should this be fixed in the DS?\n */\nconst OpenDocLink = styled(LinkButton)`\n  text-decoration: none;\n`;\n\nconst createDocumentationHref = (path: string) => {\n  if (path.startsWith('http')) {\n    return path;\n  }\n\n  if (path.startsWith('/')) {\n    return `${window.strapi.backendURL}${path}`;\n  }\n\n  return `${window.strapi.backendURL}/${path}`;\n};\n\nexport { App };\n"],"names":["Show","Reload"],"mappings":"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"}