{
  "version": 3,
  "sources": ["../../../@strapi/plugin-documentation/admin/src/pages/App.tsx"],
  "sourcesContent": ["/* eslint-disable import/no-default-export */\nimport * as React from 'react';\n\nimport {\n  LinkButton,\n  Flex,\n  IconButton,\n  Table,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n  Typography,\n  EmptyStateLayout,\n  Dialog,\n} from '@strapi/design-system';\nimport { Eye as Show, ArrowClockwise as Reload, Trash } from '@strapi/icons';\nimport {\n  ConfirmDialog,\n  useRBAC,\n  Page,\n  useAPIErrorHandler,\n  useNotification,\n  Layouts,\n} from '@strapi/strapi/admin';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { PERMISSIONS } from '../constants';\nimport {\n  useGetInfoQuery,\n  useRegenerateDocMutation,\n  useDeleteVersionMutation,\n} from '../services/api';\nimport { getTrad } from '../utils';\n\nconst App = () => {\n  const { formatMessage } = useIntl();\n  const { toggleNotification } = useNotification();\n  const { formatAPIError } = useAPIErrorHandler();\n  const { data, isLoading: isLoadingInfo, isError } = useGetInfoQuery();\n  const [regenerate] = useRegenerateDocMutation();\n  const [deleteVersion] = useDeleteVersionMutation();\n  const [showConfirmDelete, setShowConfirmDelete] = React.useState<boolean>(false);\n  const [versionToDelete, setVersionToDelete] = React.useState<string>();\n  const { allowedActions, isLoading: isLoadingRBAC } = useRBAC(PERMISSIONS);\n\n  const isLoading = isLoadingInfo || isLoadingRBAC;\n\n  const colCount = 4;\n  const rowCount = (data?.docVersions?.length || 0) + 1;\n\n  const handleRegenerateDoc = (version: string) => {\n    regenerate({ version })\n      .unwrap()\n      .then(() => {\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({\n            id: getTrad('notification.generate.success'),\n            defaultMessage: 'Successfully generated documentation',\n          }),\n        });\n      })\n      .catch((err) => {\n        toggleNotification({\n          type: 'warning',\n          message: formatAPIError(err),\n        });\n      });\n  };\n\n  const handleShowConfirmDelete = () => {\n    setShowConfirmDelete(!showConfirmDelete);\n  };\n\n  const handleConfirmDelete = async () => {\n    if (!versionToDelete) {\n      // nothing to delete\n      return;\n    }\n\n    await deleteVersion({ version: versionToDelete })\n      .unwrap()\n      .then(() => {\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({\n            id: getTrad('notification.delete.success'),\n            defaultMessage: 'Successfully deleted documentation',\n          }),\n        });\n      })\n      .catch((err) => {\n        toggleNotification({\n          type: 'warning',\n          message: formatAPIError(err),\n        });\n      });\n\n    setShowConfirmDelete(!showConfirmDelete);\n  };\n\n  const handleClickDelete = (version: string) => {\n    setVersionToDelete(version);\n    setShowConfirmDelete(!showConfirmDelete);\n  };\n\n  const title = formatMessage({\n    id: getTrad('plugin.name'),\n    defaultMessage: 'Documentation',\n  });\n\n  if (isLoading) {\n    return <Page.Loading />;\n  }\n\n  if (isError) {\n    return <Page.Error />;\n  }\n\n  return (\n    <Layouts.Root>\n      <Page.Title>{title}</Page.Title>\n      <Page.Main>\n        <Layouts.Header\n          title={title}\n          subtitle={formatMessage({\n            id: getTrad('pages.PluginPage.header.description'),\n            defaultMessage: 'Configure the documentation plugin',\n          })}\n          primaryAction={\n            <OpenDocLink\n              disabled={!allowedActions.canRead || !data?.currentVersion || !data?.prefix}\n              href={createDocumentationHref(`${data?.prefix}/v${data?.currentVersion}`)}\n              startIcon={<Show />}\n            >\n              {formatMessage({\n                id: getTrad('pages.PluginPage.Button.open'),\n                defaultMessage: 'Open Documentation',\n              })}\n            </OpenDocLink>\n          }\n        />\n        <Layouts.Content>\n          {data?.docVersions.length ? (\n            <Table colCount={colCount} rowCount={rowCount}>\n              <Thead>\n                <Tr>\n                  <Th>\n                    <Typography variant=\"sigma\" textColor=\"neutral600\">\n                      {formatMessage({\n                        id: getTrad('pages.PluginPage.table.version'),\n                        defaultMessage: 'Version',\n                      })}\n                    </Typography>\n                  </Th>\n                  <Th>\n                    <Typography variant=\"sigma\" textColor=\"neutral600\">\n                      {formatMessage({\n                        id: getTrad('pages.PluginPage.table.generated'),\n                        defaultMessage: 'Last Generated',\n                      })}\n                    </Typography>\n                  </Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {data.docVersions\n                  .slice(0)\n                  .sort((a, b) => (a.generatedDate < b.generatedDate ? 1 : -1))\n                  .map((doc) => (\n                    <Tr key={doc.version}>\n                      <Td width=\"50%\">\n                        <Typography>{doc.version}</Typography>\n                      </Td>\n                      <Td width=\"50%\">\n                        <Typography>{doc.generatedDate}</Typography>\n                      </Td>\n                      <Td>\n                        <Flex justifyContent=\"end\" onClick={(e) => e.stopPropagation()}>\n                          <IconButton\n                            tag=\"a\"\n                            disabled={!allowedActions.canRead}\n                            href={createDocumentationHref(`${data.prefix}/v${doc.version}`)}\n                            variant=\"ghost\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            label={formatMessage(\n                              {\n                                id: getTrad('pages.PluginPage.table.icon.show'),\n                                defaultMessage: 'Open {target}',\n                              },\n                              { target: `${doc.version}` }\n                            )}\n                          >\n                            <Show />\n                          </IconButton>\n                          {allowedActions.canRegenerate ? (\n                            <IconButton\n                              onClick={() => handleRegenerateDoc(doc.version)}\n                              variant=\"ghost\"\n                              label={formatMessage(\n                                {\n                                  id: getTrad('pages.PluginPage.table.icon.regenerate'),\n                                  defaultMessage: 'Regenerate {target}',\n                                },\n                                { target: `${doc.version}` }\n                              )}\n                            >\n                              <Reload />\n                            </IconButton>\n                          ) : null}\n                          {allowedActions.canUpdate && doc.version !== data.currentVersion ? (\n                            <IconButton\n                              onClick={() => handleClickDelete(doc.version)}\n                              variant=\"ghost\"\n                              label={formatMessage(\n                                {\n                                  id: 'global.delete-target',\n                                  defaultMessage: 'Delete {target}',\n                                },\n                                { target: `${doc.version}` }\n                              )}\n                            >\n                              <Trash />\n                            </IconButton>\n                          ) : null}\n                        </Flex>\n                      </Td>\n                    </Tr>\n                  ))}\n              </Tbody>\n            </Table>\n          ) : (\n            <EmptyStateLayout content=\"\" icon={null} />\n          )}\n        </Layouts.Content>\n        <Dialog.Root open={showConfirmDelete} onOpenChange={setShowConfirmDelete}>\n          <ConfirmDialog onConfirm={handleConfirmDelete} />\n        </Dialog.Root>\n      </Page.Main>\n    </Layouts.Root>\n  );\n};\n\n/**\n * TODO: should this be fixed in the DS?\n */\nconst OpenDocLink = styled(LinkButton)`\n  text-decoration: none;\n`;\n\nconst createDocumentationHref = (path: string) => {\n  if (path.startsWith('http')) {\n    return path;\n  }\n\n  if (path.startsWith('/')) {\n    return `${window.strapi.backendURL}${path}`;\n  }\n\n  return `${window.strapi.backendURL}/${path}`;\n};\n\nexport { App };\n"],
  "mappings": "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",
  "names": ["Show", "Reload"]
}
